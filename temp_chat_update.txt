{/* Messages */}
<div className="flex-1 overflow-y-auto bg-gray-50 px-4 py-4 space-y-4">
  {messages.map((message, index) => {
    const isOwnMessage = message.senderId === currentUser.id;
    const isSystem = message.type === "system";
    const isUrgentClubMessage = message.content.startsWith("[URGENT]") || message.type === "match-request";
    const isRegularClubMessage = message.content.startsWith("[CLUB]") || message.content.startsWith("[BASELINE]") || message.content.startsWith("[MODERATOR]");
    const isClubMessage = isUrgentClubMessage || isRegularClubMessage;
    const showAvatar = !isOwnMessage && (index === 0 || messages[index - 1].senderId !== message.senderId);

    return (
      <div
        key={message.id}
        className={`flex ${
          isOwnMessage ? "justify-end" : "justify-start"
        }`}
      >
        {isSystem || isClubMessage ? (
          <div className="max-w-sm mx-auto">
            <div className={`px-4 py-3 rounded-lg text-center shadow-lg ${
              isUrgentClubMessage 
                ? "bg-red-600 text-white border-2 border-red-700" 
                : isRegularClubMessage
                ? "bg-emerald-600 text-white border-2 border-emerald-700"
                : "bg-blue-100 text-blue-700"
            }`}>
              <div className="flex items-center justify-center space-x-2 mb-2">
                {isClubMessage ? (
                  <>
                    <div className="w-6 h-6 bg-white rounded-full flex items-center justify-center">
                      <span className={`text-sm font-bold ${
                        isUrgentClubMessage ? "text-red-600" : "text-emerald-600"
                      }`}>ðŸŽ¾</span>
                    </div>
                    <span className="font-bold text-sm">
                      {isUrgentClubMessage ? "ðŸš¨ BASELINE TENNIS - HITNO" : "BASELINE TENNIS"}
                    </span>
                  </>
                ) : (
                  <>
                    <Bell className="w-4 h-4" />
                    <span className="font-bold text-sm">Tennis App</span>
                  </>
                )}
              </div>
              <p className={`text-sm ${isUrgentClubMessage ? "font-bold" : "font-medium"}`}>
                {isClubMessage 
                  ? message.content.replace(/^\[.*?\]\s*/, "")
                  : message.content
                }
              </p>
            </div>
            <p className="text-xs text-gray-500 text-center mt-1">
              {formatTime(message.createdAt)}
            </p>
          </div>
        ) : (
          <div
            className={`flex max-w-xs ${
              isOwnMessage ? "flex-row-reverse" : "flex-row"
            }`}
          >
            {/* Avatar */}
            {!isOwnMessage && (
              <div className={`flex-shrink-0 ${isOwnMessage ? "ml-2" : "mr-2"}`}>
                {showAvatar ? (
                  <div className="w-8 h-8 rounded-full bg-emerald-100 flex items-center justify-center text-sm">
                    ðŸŽ¾
                  </div>
                ) : (
                  <div className="w-8"></div>
                )}
              </div>
            )}

            <div className={`flex flex-col ${isOwnMessage ? "items-end" : "items-start"}`}>
              {!isOwnMessage && showAvatar && (
                <p className="text-xs text-gray-600 mb-1 px-2">
                  {message.senderName}
                </p>
              )}
              
              <div
                className={`px-4 py-2 rounded-2xl max-w-full break-words ${
                  isOwnMessage
                    ? "bg-emerald-600 text-white rounded-br-sm"
                    : "bg-white text-gray-800 rounded-bl-sm shadow-sm border"
                }`}
              >
                <p className="text-sm">{message.content}</p>
              </div>
              
              <div
                className={`flex items-center mt-1 px-2 ${
                  isOwnMessage ? "flex-row-reverse space-x-reverse space-x-1" : "space-x-1"
                }`}
              >
                <span className="text-xs text-gray-500">
                  {formatTime(message.createdAt)}
                </span>
                {isOwnMessage && (
                  <div className="text-emerald-600">
                    {message.readBy.length > 1 ? (
                      <CheckCheck className="w-3 h-3" />
                    ) : (
                      <Check className="w-3 h-3" />
                    )}
                  </div>
                )}
              </div>
            </div>
          </div>
        )}
      </div>
    );
  })}
  <div ref={messagesEndRef} />
</div>
